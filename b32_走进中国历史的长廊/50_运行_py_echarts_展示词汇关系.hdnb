[Python 制作超酷思维导图](https://mp.weixin.qq.com/s/_4d5We3JpuJ8lGN54LqOMg)

```bash
pip install pyecharts
```

![马路上这些物品如何说](./wmimages/c06_单词.PNG)

```py3

from pyecharts import options as opts
from pyecharts.charts import Tree
#数据
data = {
    "name": "Python 学习指南",
    "children": [
        {
            "name": "基础知识",
            "children": [
                {
                    "name": "数据类型与操作",
                    "children": [
                        {"name": "整型"},
                        {"name": "浮点型"},
                        {"name": "字符串"},
                        {"name": "列表"},
                        {"name": "元组"},
                        {"name": "字典"},
                    ]
                },
                {"name": "流程控制与函数"},
                {"name": "模块与包管理"},
            ],
        },
        {
            "name": "进阶内容",
            "children": [
                {
                    "name": "面向对象编程",
                    "children": [
                        {"name": "类与对象"},
                        {"name": "继承与多态"},
                    ],
                },
                {
                    "name": "异常处理",
                    "children": [
                        {"name": "try-except-finally"},
                        {"name": "自定义异常"},
                    ],
                },
                {
                    "name": "并发编程",
                    "children": [
                        {"name": "多线程编程"},
                        {"name": "多进程编程"},
                        {"name": "协程编程"},
                    ],
                },
            ],
        },
        {
            "name": "实战项目",
            "children": [
                {"name": "Web 开发入门"},
                {"name": "数据分析与可视化"},
                {"name": "机器学习入门"},
                {
                    "name": "深度学习与人工智能",
                    "children": [
                        {"name": "神经网络与反向传播算法"},
                        {"name": "卷积神经网络"},
                        {"name": "循环神经网络"},
                        {"name": "强化学习"},
                    ],
                },
            ],
        },
    ],
}

c = (
    Tree()
    .add("", [data], orient="LR", initial_tree_depth=-1, symbol="none", itemstyle_opts=opts.ItemStyleOpts(color="#3182bd"))
    .set_global_opts(
        title_opts=opts.TitleOpts(title="Python 学习指南"),
        tooltip_opts=opts.TooltipOpts(trigger="item", trigger_on="mousemove"),
    )
)
#生成html格式思维导图
# 52_wmtag_memo_output.html
c.render("54_wmtag_memo_output-wmgitignore.html")

```

```bash
python -m http.server 5252
```

![中国情侣](./wmimages/c18_情侣.png)

参数简要:

name(必需):节点的名称,通常是一个字符串,表示节点的标识.  
data(必需):节点的数据,通常是一个列表,包含节点的信息.  
orient(可选):设置节点布局的方向,默认为 "LR"(从左到右).可选值有:"LR","RL","TB","BT".  
initial_tree_depth(可选):设置树状图的初始深度,默认为 -1.  
symbol(可选):节点的形状,默认为 "none".常见的形状有:"circle","rect","roundRect","triangle","diamond" 等.  
itemstyle_opts(可选):节点的样式配置,可以设置颜色,透明度等样式选项.  
symbol_size:设置节点的大小.  
label_opts:设置节点标签的样式和配置.  
roam:是否开启缩放和平移操作.  

[pyecharts(9)-动态可视化-树形图-思维导图](https://blog.csdn.net/vv_eve/article/details/107996662)

![形象化的解释](./wmimages/c12_形象化的解释python.png)
